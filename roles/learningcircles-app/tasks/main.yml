---
- set_fact: 
    docker_image_name: "ghcr.io/p2pu/learning-circles:{{LEARNINGCIRCLES.BRANCH}}"

- name: Remove old docker images & containers
  docker_prune:
    images: yes
    containers: yes

#- name: get code from git
#  git: 
#    dest: /usr/local/src/learning-circles
#    repo: https://github.com/p2pu/learning-circles.git
#    version: "{{LEARNINGCIRCLES.BRANCH}}"

#- name: Build docker image
#  docker_image:
#    name: local/learning-circles
#    build:
#      path: /usr/local/src/learning-circles
#      pull: yes
#    tag: "{{LEARNINGCIRCLES.BRANCH}}"
#    source: build
#    force_source: yes
#    state: present

- name: Pull docker image
  docker_image:
    name: "{{docker_image_name}}"
    force_source: yes
    state: present

- name: create postgres user
  postgresql_user:
    name: "{{LEARNINGCIRCLES.DB_USER}}"
    password: "{{LEARNINGCIRCLES.DB_PASSWORD}}"
    login_host: "127.0.0.1"
    login_user: "{{PG_ADMIN_USER}}"
    login_password: "{{PG_ADMIN_PASSWORD}}"

- name: create postgres db
  postgresql_db:
    name: "{{LEARNINGCIRCLES.DB_NAME}}"
    encoding: UTF-8
    login_host: "127.0.0.1"
    login_user: "{{PG_ADMIN_USER}}"
    login_password: "{{PG_ADMIN_PASSWORD}}"
    owner: "{{LEARNINGCIRCLES.DB_USER}}"

- name: setup static and media file hosting through nginx-proxy
  template: src=static.j2 dest=/var/p2pu/volumes/p2pu-nginx/vhosts.d/{{LEARNINGCIRCLES.DOMAIN}}

- name: setup location section for nginx
  template: src=domain_location.j2 dest=/var/p2pu/volumes/p2pu-nginx/vhosts.d/{{LEARNINGCIRCLES.DOMAIN}}_location

# Setup env variables for sharing between django containers and celery containers. They need basically the same ENV variables except for the Nginx specific ones.
- set_fact:
    lc_nginx_env:
      VIRTUAL_HOST: "{{LEARNINGCIRCLES.DOMAIN}}"
      LETSENCRYPT_HOST: "{{LEARNINGCIRCLES.DOMAIN}}"
      LETSENCRYPT_EMAIL: "admin@p2pu.org"

- set_fact: 
    lc_app_env: "{{ lc_docker_env | combine(lc_nginx_env) }}"

- name: start docker container for django
  docker_container:
    name: "{{LEARNINGCIRCLES.DOMAIN}}"
    image: "{{docker_image_name}}"
    state: started
    pull: no
    recreate: true
    restart: yes
    restart_policy: always
    volumes:
    - "/var/p2pu/volumes/p2pu-nginx/static/{{LEARNINGCIRCLES.DOMAIN}}/static:/opt/app/static_serve"
    - "/var/p2pu/volumes/p2pu-nginx/static/{{LEARNINGCIRCLES.DOMAIN}}/media:/opt/app/upload"
    - "/var/p2pu/volumes/{{LEARNINGCIRCLES.DOMAIN}}/celery:/var/lib/celery"
    - "/var/p2pu/volumes/{{LEARNINGCIRCLES.DOMAIN}}/log:/var/log"
    links:
    - "p2pu-postgres:postgres"
    - "{{RABBITMQ_HOSTNAME}}:rabbitmq"
    env: "{{lc_app_env}}"
    log_driver: fluentd
    log_options:
        tag: django


- name: start docker container for celery
  docker_container:
    name: "{{LEARNINGCIRCLES.DOMAIN}}-celery"
    image: "{{docker_image_name}}"
    state: started
    pull: no
    user: celery
    recreate: true
    restart: yes
    restart_policy: always
    volumes:
    - "/var/p2pu/volumes/p2pu-nginx/static/{{LEARNINGCIRCLES.DOMAIN}}/static:/opt/app/static_serve"
    - "/var/p2pu/volumes/p2pu-nginx/static/{{LEARNINGCIRCLES.DOMAIN}}/media:/opt/app/upload"
    - "/var/p2pu/volumes/{{LEARNINGCIRCLES.DOMAIN}}/celery:/var/lib/celery"
    - "/var/p2pu/volumes/{{LEARNINGCIRCLES.DOMAIN}}/log:/var/log"
    links:
    - "p2pu-postgres:postgres"
    - "{{RABBITMQ_HOSTNAME}}:rabbitmq"
    command: /opt/django-venv/bin/celery -A learnwithpeople worker --loglevel=INFO
    env: "{{lc_docker_env}}"
    #log_driver: fluentd
    #log_options:
    #    tag: celery


- name: start docker container for celery beat
  docker_container:
    name: "{{LEARNINGCIRCLES.DOMAIN}}-celerybeat"
    image: "{{docker_image_name}}"
    state: started
    pull: no
    user: celery
    recreate: true
    restart: yes
    restart_policy: always
    volumes:
    - "/var/p2pu/volumes/p2pu-nginx/static/{{LEARNINGCIRCLES.DOMAIN}}/static:/opt/app/static_serve"
    - "/var/p2pu/volumes/p2pu-nginx/static/{{LEARNINGCIRCLES.DOMAIN}}/media:/opt/app/upload"
    - "/var/p2pu/volumes/{{LEARNINGCIRCLES.DOMAIN}}/celery:/var/lib/celery"
    - "/var/p2pu/volumes/{{LEARNINGCIRCLES.DOMAIN}}/log:/var/log"
    links:
    - "p2pu-postgres:postgres"
    - "{{RABBITMQ_HOSTNAME}}:rabbitmq"
    command: /opt/django-venv/bin/celery -A learnwithpeople beat --loglevel=INFO --schedule=/var/lib/celery/celerybeat-schedule
    env: "{{lc_docker_env}}"
    #log_driver: fluentd
    #log_options:
    #    tag: celery-beat
